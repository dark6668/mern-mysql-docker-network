version: "3.8"

services:
  db:
    build: ./db
    container_name: db-sql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 4s
      timeout: 5s
      retries: 3
    networks:
      hostnet: 
       ipv4_address: ${IPV4_DB}
    env_file:
       - .env   
    volumes:
    - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  server:
    build: ./server
    container_name: server
    networks:
      hostnet:
        ipv4_address: ${IPV4_SERVER}
    env_file:
      - .env
    volumes:
      - ./server:/server
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - IPV4_DB=${IPV4_DB}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - REACT_APP_API_URL=http://${IPV4_REACT}:3000
      - SECRET_ACCESS_TOKEN=${SECRET_ACCESS_TOKEN}
      - SECRET_REFRESH_TOKEN=${SECRET_REFRESH_TOKEN}
    depends_on:
       db:
        condition: service_healthy

  client:
   build: ./client
   container_name: client-react
   networks:
      hostnet: 
       ipv4_address: ${IPV4_REACT}
   depends_on:
       db:
        condition: service_healthy
   volumes:
     - ./client:/react 
   environment:
      - REACT_APP_API_URL=http://${IPV4_SERVER}:${SERVER_PORT}
 
networks:
  hostnet:
    name: MERN-MYSQL
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}