{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nexport default class Utility {\n  static async FetchRequest(request) {\n    return new Promise((resolve, reject) => {\n      fetch(`${process.env.REACT_APP_API_URL}/${request.url}`, {\n        method: request.method,\n        body: request.method === \"GET\" ? null : request.body,\n        headers: {\n          \"Content-Type\": request.ContentType,\n          ...(request.Authorization !== undefined && {\n            \"Authorization\": request.Authorization\n          })\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          response.json().then(errorData => {\n            reject(errorData);\n          });\n          return;\n        }\n        response.json().then(responseData => {\n          resolve(responseData);\n        }).catch(err => {\n          reject(err);\n        });\n      }).catch(err => {\n        if (err.message === \"Failed to fetch\") {\n          alert(\"Something went wrong.\");\n        }\n        reject({\n          error: err\n        });\n      });\n    });\n  }\n  static UserUnauthorized() {\n    sessionStorage.removeItem(\"accessToken\");\n    sessionStorage.removeItem(\"refreshToken\");\n    alert(\"Unauthorized\");\n    window.location.reload();\n  }\n  static CheckAccessTokenExpiresIn() {\n    return new Promise((resolve, reject) => {\n      try {\n        const decodedToken = jwtDecode(sessionStorage.getItem(\"accessToken\"));\n        const expirationTime = decodedToken.exp * 1000;\n        if (expirationTime < Date.now()) {\n          reject(\"Access token has expired\");\n        } else {\n          console.log(232);\n          resolve(decodedToken);\n        }\n      } catch (error) {\n        reject(\"Failed to decode access token\");\n      }\n    });\n  }\n  static MakeNewAccessToken(newAccessToken) {\n    return new Promise((resolve, reject) => {\n      try {\n        sessionStorage.removeItem(\"accessToken\");\n        sessionStorage.setItem(\"accessToken\", newAccessToken);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(false);\n      }\n    });\n  }\n}","map":{"version":3,"names":["jwtDecode","Utility","FetchRequest","request","Promise","resolve","reject","fetch","process","env","REACT_APP_API_URL","url","method","body","headers","ContentType","Authorization","undefined","then","response","status","json","errorData","responseData","catch","err","message","alert","error","UserUnauthorized","sessionStorage","removeItem","window","location","reload","CheckAccessTokenExpiresIn","decodedToken","getItem","expirationTime","exp","Date","now","console","log","MakeNewAccessToken","newAccessToken","setItem"],"sources":["/react/src/function/utility.js"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\n\nexport  default class Utility{\n\n  static async FetchRequest(request) {\n    return new Promise((resolve, reject) => {\n      fetch(`${process.env.REACT_APP_API_URL}/${request.url}`, {\n        method: request.method,\n        body: request.method === \"GET\" ? null : request.body,\n        headers: {\n          \"Content-Type\": request.ContentType,\n          ...(request.Authorization !== undefined && { \"Authorization\": request.Authorization }),\n        },\n      })\n        .then((response) => {\n          if (response.status !== 200) {\n            response.json().then((errorData) => {\n              reject(errorData);\n            });\n            return;\n          }\n          response\n            .json()\n            .then((responseData) => {\n              resolve(responseData);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        })\n        .catch((err) => {\n          if (err.message === \"Failed to fetch\") {\n            alert(\"Something went wrong.\");\n          }\n          reject({ error: err });\n        });\n    });\n  }\n\n  static UserUnauthorized (){\n    sessionStorage.removeItem(\"accessToken\");\n    sessionStorage.removeItem(\"refreshToken\");\n    alert(\"Unauthorized\")\n    window.location.reload();\n  }\n\n  static CheckAccessTokenExpiresIn() {\n    return new Promise((resolve, reject) => {\n      try {\n        const decodedToken = jwtDecode(sessionStorage.getItem(\"accessToken\"));\n  \n        const expirationTime = decodedToken.exp * 1000;\n  \n        if (expirationTime < Date.now()) {\n          reject(\"Access token has expired\");\n        } else {\n          console.log(232);\n          resolve(decodedToken);\n        }\n      } catch (error) {\n        reject(\"Failed to decode access token\");\n      }\n    });\n  }\n  static MakeNewAccessToken(newAccessToken){\n    return new Promise((resolve, reject) => {\n      try {\n        sessionStorage.removeItem(\"accessToken\");\n        sessionStorage.setItem(\"accessToken\", newAccessToken);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(false);\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}