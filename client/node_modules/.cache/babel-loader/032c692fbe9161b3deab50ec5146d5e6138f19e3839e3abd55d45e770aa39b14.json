{"ast":null,"code":"export default function FetchRequest(request) {\n  try {\n    return new Promise((resolve, reject) => {\n      fetch(`${process.env.REACT_APP_API_URL}/${request.url}`, {\n        method: request.method,\n        body: request.method === \"GET\" ? null : request.body,\n        headers: {\n          \"Content-Type\": request.ContentType\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          response.json().then(errorData => {\n            console.log(\"Error response from server:\", errorData.err);\n            reject(errorData);\n          });\n        } else {\n          response.json().then(responseData => {\n            resolve(responseData);\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n_c = FetchRequest;\nvar _c;\n$RefreshReg$(_c, \"FetchRequest\");","map":{"version":3,"names":["FetchRequest","request","Promise","resolve","reject","fetch","process","env","REACT_APP_API_URL","url","method","body","headers","ContentType","then","response","status","json","errorData","console","log","err","responseData","catch","_c","$RefreshReg$"],"sources":["/react/src/function/utility.js"],"sourcesContent":["export default function FetchRequest(request) {\n  try {\n    return new Promise((resolve, reject) => {\n      fetch(`${process.env.REACT_APP_API_URL}/${request.url}`, {\n        method: request.method,\n        body: request.method === \"GET\" ? null : request.body,\n        headers: {\n          \"Content-Type\": request.ContentType,\n        },\n      }).then((response) => {\n        if (response.status !== 200) {\n          response.json().then((errorData) => {\n            console.log(\"Error response from server:\", errorData.err);\n            reject(errorData);\n          });\n        } else {\n          response\n            .json()\n            .then((responseData) => {\n              resolve(responseData);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n      });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"mappings":"AAAA,eAAe,SAASA,YAAYA,CAACC,OAAO,EAAE;EAC5C,IAAI;IACF,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,IAAGP,OAAO,CAACQ,GAAI,EAAC,EAAE;QACvDC,MAAM,EAAET,OAAO,CAACS,MAAM;QACtBC,IAAI,EAAEV,OAAO,CAACS,MAAM,KAAK,KAAK,GAAG,IAAI,GAAGT,OAAO,CAACU,IAAI;QACpDC,OAAO,EAAE;UACP,cAAc,EAAEX,OAAO,CAACY;QAC1B;MACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACpB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3BD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,SAAS,IAAK;YAClCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,SAAS,CAACG,GAAG,CAAC;YACzDjB,MAAM,CAACc,SAAS,CAAC;UACnB,CAAC,CAAC;QACJ,CAAC,MAAM;UACLH,QAAQ,CACLE,IAAI,CAAC,CAAC,CACNH,IAAI,CAAEQ,YAAY,IAAK;YACtBnB,OAAO,CAACmB,YAAY,CAAC;UACvB,CAAC,CAAC,CACDC,KAAK,CAAEF,GAAG,IAAK;YACdF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;UAClB,CAAC,CAAC;QACN;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EAClB;AACF;AAACG,EAAA,GA9BuBxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}