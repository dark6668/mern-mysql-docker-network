{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nexport default class Utility {\n  static FetchRequest(request) {\n    return new Promise((resolve, reject) => {\n      try {\n        fetch(`${process.env.REACT_APP_API_URL}/${request.url}`, {\n          method: request.method,\n          body: request.method === \"GET\" ? null : request.body,\n          headers: {\n            \"Content-Type\": request.ContentType,\n            ...(request.Authorization && {\n              Authorization: request.Authorization\n            })\n          }\n        }).then(response => {\n          if (!response.ok) {\n            return response.json().then(errorData => {\n              reject(errorData);\n            });\n          }\n          return response.json().then(responseData => {\n            resolve(responseData);\n          });\n        }).catch(err => {\n          if (err.message === \"Failed to fetch\") {\n            alert(\"Something went wrong.\");\n          }\n          reject({\n            error: err\n          });\n        });\n      } catch (error) {\n        console.error(\"Unexpected error in FetchRequest:\", error);\n        alert(\"Something went wrong.\");\n        reject(error); // Reject with the error to ensure it's not silently ignored\n      }\n    });\n  }\n  static UserUnauthorized() {\n    sessionStorage.removeItem(\"accessToken\");\n    sessionStorage.removeItem(\"refreshToken\");\n    alert(\"Unauthorized\");\n    window.location.reload();\n  }\n  static CheckAccessTokenExpiresIn() {\n    return new Promise((resolve, reject) => {\n      try {\n        const decodedToken = jwtDecode(sessionStorage.getItem(\"accessToken\"));\n        const expirationTime = decodedToken.exp * 1000;\n        if (expirationTime < Date.now()) return resolve(\"Access token has expired\");\n        resolve(decodedToken);\n      } catch (error) {\n        reject(new Error(\"Failed to decode access token\"));\n      }\n    });\n  }\n  static async getNewAccessToken() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const request = {\n          method: \"GET\",\n          url: \"api/auth/getNewaAccessToken\",\n          ContentType: \"application/json; charset=UTF-8\",\n          Authorization: `Bearer ${sessionStorage.getItem(\"refreshToken\")}`\n        };\n        await this.FetchRequest(request).then(result => {\n          sessionStorage.removeItem(\"accessToken\");\n          sessionStorage.setItem(\"accessToken\", result.accessToken);\n          resolve(false);\n        });\n      } catch (error) {\n        console.error(error);\n        reject(true);\n      }\n    });\n  }\n}","map":{"version":3,"names":["jwtDecode","Utility","FetchRequest","request","Promise","resolve","reject","fetch","process","env","REACT_APP_API_URL","url","method","body","headers","ContentType","Authorization","then","response","ok","json","errorData","responseData","catch","err","message","alert","error","console","UserUnauthorized","sessionStorage","removeItem","window","location","reload","CheckAccessTokenExpiresIn","decodedToken","getItem","expirationTime","exp","Date","now","Error","getNewAccessToken","result","setItem","accessToken"],"sources":["/react/src/function/utility.js"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\n\nexport default class Utility {\n  static FetchRequest(request) {\n    return new Promise((resolve, reject) => {\n      try {\n        fetch(`${process.env.REACT_APP_API_URL}/${request.url}`, {\n          method: request.method,\n          body: request.method === \"GET\" ? null : request.body,\n          headers: {\n            \"Content-Type\": request.ContentType,\n            ...(request.Authorization && { Authorization: request.Authorization }),\n          },\n        })\n          .then((response) => {\n            if (!response.ok) {\n              return response.json().then((errorData) => {\n                reject(errorData);\n              });\n            }\n  \n            return response.json().then((responseData) => {\n              resolve(responseData);\n            });\n          })\n          .catch((err) => {\n  \n            if (err.message === \"Failed to fetch\") {\n              alert(\"Something went wrong.\");\n            }\n  \n            reject({ error: err });\n          });\n      } catch (error) {\n        console.error(\"Unexpected error in FetchRequest:\", error);\n        alert(\"Something went wrong.\");\n        reject(error); // Reject with the error to ensure it's not silently ignored\n      }\n    });\n  }\n\n  static UserUnauthorized() {\n    sessionStorage.removeItem(\"accessToken\");\n    sessionStorage.removeItem(\"refreshToken\");\n    alert(\"Unauthorized\");\n    window.location.reload();\n  }\n\n  static CheckAccessTokenExpiresIn() {\n    return new Promise((resolve, reject) => {\n      try {\n        const decodedToken = jwtDecode(sessionStorage.getItem(\"accessToken\"));\n        const expirationTime = decodedToken.exp * 1000;\n        if (expirationTime < Date.now())\n          return resolve(\"Access token has expired\");\n        resolve(decodedToken);\n      } catch (error) {\n        reject(new Error(\"Failed to decode access token\"));\n      }\n    });\n  }\n  static async getNewAccessToken() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const request = {\n          method: \"GET\",\n          url: \"api/auth/getNewaAccessToken\",\n          ContentType: \"application/json; charset=UTF-8\",\n          Authorization: `Bearer ${sessionStorage.getItem(\"refreshToken\")}`,\n        };\n        await this.FetchRequest(request).then((result) => {\n          sessionStorage.removeItem(\"accessToken\");\n          sessionStorage.setItem(\"accessToken\", result.accessToken);\n          resolve(false);\n        });\n      } catch (error) {\n        console.error(error);\n        reject(true);\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}